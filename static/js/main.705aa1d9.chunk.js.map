{"version":3,"sources":["apple/assets/h1.png","serviceWorker.ts","apple/Wonderful.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Wonderful","_ref","Object","objectDestructuringEmpty","react_default","a","createElement","className","index_es","target","delay","to","width","height","padding","borderRadius","--o","from","duration","ease","Power2","easeIn","src","h1","alt","style","opacity","--l1","--l2","--l2w","--l2h","--l3w","--l3h","--l2bg","--l2r","--l3t","transform","background","transformOrigin","top","scale","backgroundColor","easeOut","ReactDOM","render","src_apple_Wonderful","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uLCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4GCwGSC,EA/GoB,SAAAC,GACjC,OAD0CC,OAAAC,EAAA,EAAAD,CAAAD,GAExCG,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACjBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUC,OACRL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,MAAO,EACPC,GAAI,CACFC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACTC,aAAc,MACdC,MAAO,GAETC,KAAM,CACJD,MAAO,GAETE,SAAU,IACVC,KAAMC,IAAOC,QAEbjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKgB,IAAKC,IAAIC,IAAI,GAAGC,MAAO,CAAEC,QAAS,gBAG3CtB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,MAAO,EACPC,GAAI,CACFgB,OAAQ,EACRC,OAAQ,MACRC,QAAS,OACTC,QAAS,OACTC,QAAS,OACTC,QAAS,OACTC,SAAU,UACVC,QAAS,OACTC,QAAS,QAEXlB,KAAM,CACJU,OAAQ,EACRC,OAAQ,IACRC,QAAS,QACTC,QAAS,OACTC,QAAS,OACTC,QAAS,OACTC,SAAU,UACVC,QAAS,IACTC,QAAS,QAEXjB,SAAU,IACVC,KAAMC,IAAOC,QAEbjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQkB,MAAO,CAAEW,UAAW,sBAC3ChC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQkB,MAAO,CAC5BV,aAAc,YACdH,MAAO,aACPC,OAAQ,aACRwB,WAAY,cACZC,gBAAiB,cACjBF,UAAW,wBAEbhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQkB,MAAO,CAC5BV,aAAc,YACdH,MAAO,aACPC,OAAQ,aACRwB,WAAY,cACZE,IAAK,aACLD,gBAAiB,cACjBF,UAAW,4BAMnBhC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,MAAO,EACPO,KAAM,CACJuB,MAAO,GAET7B,GAAI,CACF6B,MAAO,KAETtB,SAAU,EACVC,KAAMC,IAAOC,SAEfjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACES,KAAM,CAAEwB,gBAAiB,WACzB9B,GAAI,CACF6B,MAAO,EACPC,gBAAiB,WAEnBvB,SAAU,EACVC,KAAMC,IAAOsB,UAEftC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACES,KAAM,CAAEF,aAAc,GACtBJ,GAAI,CACFC,MAAO,IACPC,OAAQ,IACR2B,MAAO,GACPzB,aAAc,OAEhBG,SAAU,EACVC,KAAMC,IAAOsB,aCxGvBC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAAeC,SAASC,eAAe,SF+HjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.705aa1d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/h1.dd83e2ef.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport h1 from './assets/h1.png';\nimport './Wonderful.css';\nimport { Tween, Timeline } from 'react-gsap';\n// @ts-ignore\nimport { Power2 } from 'gsap/TweenMax';\n\n\ninterface Props {\n}\n\nconst Wonderful: React.FC<Props> = ({}) => {\n  return (\n    <section className=\"wonderful\">\n      <Timeline target={\n        <div className=\"h1-box\">\n          <Tween\n            delay={4}\n            to={{\n              width: 50,\n              height: 50,\n              padding: 0,\n              borderRadius: '50%',\n              '--o': 0,\n            }}\n            from={{\n              '--o': 1,\n            }}\n            duration={1.2}\n            ease={Power2.easeIn}\n          >\n            <div className=\"h1-wrap\">\n              <img src={h1} alt=\"\" style={{ opacity: 'var(--o)' as any }}/>\n            </div>\n          </Tween>\n          <Tween\n            delay={4}\n            to={{\n              '--l1': 0,\n              '--l2': '50%',\n              '--l2w': '30px',\n              '--l2h': '30px',\n              '--l3w': '30px',\n              '--l3h': '30px',\n              '--l2bg': '#ffffff',\n              '--l2r': '0deg',\n              '--l3t': '90px',\n            }}\n            from={{\n              '--l1': 1,\n              '--l2': '0',\n              '--l2w': '200px',\n              '--l2h': '10px',\n              '--l3w': '60px',\n              '--l3h': '10px',\n              '--l2bg': '#454345',\n              '--l2r': '0',\n              '--l3t': '60px',\n            }}\n            duration={1.2}\n            ease={Power2.easeIn}\n          >\n            <div className=\"lines\">\n              <div className=\"line1\" style={{ transform: 'scale(var(--l1))' as any }}></div>\n              <div className=\"line2\" style={{\n                borderRadius: 'var(--l2)',\n                width: 'var(--l2w)',\n                height: 'var(--l2h)',\n                background: 'var(--l2bg)',\n                transformOrigin: '-120px 60px',\n                transform: 'rotate(var(--l2r))',\n              }}></div>\n              <div className=\"line3\" style={{\n                borderRadius: 'var(--l2)',\n                width: 'var(--l3w)',\n                height: 'var(--l3h)',\n                background: 'var(--l2bg)',\n                top: 'var(--l3t)',\n                transformOrigin: '-120px 60px',\n                transform: 'rotate(var(--l2r))',\n              }}></div>\n            </div>\n          </Tween>\n        </div>\n      }>\n        <Tween\n          delay={2}\n          from={{\n            scale: 3,\n          }}\n          to={{\n            scale: 1.8,\n          }}\n          duration={1}\n          ease={Power2.easeIn}\n        />\n        <Tween\n          from={{ backgroundColor: \"#ffffff\", }}\n          to={{\n            scale: 1,\n            backgroundColor: '#e4e3e4'\n          }}\n          duration={1}\n          ease={Power2.easeOut}\n        />\n        <Tween\n          from={{ borderRadius: 0 }}\n          to={{\n            width: 436,\n            height: 436,\n            scale: 0.5,\n            borderRadius: '50%'\n          }}\n          duration={1}\n          ease={Power2.easeOut}\n        />\n\n      </Timeline>\n    </section>\n  );\n};\n\nexport default Wonderful;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport PlaceholderForm from './style/PlaceholderForm';\nimport Wonderful from './apple/Wonderful';\n// import LoginInput from './hooks/loginInput';\n// import HearBeat from './heart/HeartBeat';\n// import ParticleButton from './style/ParticleButton';\n\nReactDOM.render(<Wonderful />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}